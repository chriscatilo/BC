//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BC.EQCS.Domain.Incident.Validation {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class IncidentValidationErrorMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal IncidentValidationErrorMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BC.EQCS.Domain.Incident.Validation.IncidentValidationErrorMessages", typeof(IncidentValidationErrorMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Birth Date cannot be a future date.
        /// </summary>
        public static string BirthDateCannotBeInFuture {
            get {
                return ResourceManager.GetString("BirthDateCannotBeInFuture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Category does not exist.
        /// </summary>
        public static string CategoryDoesNotExist {
            get {
                return ResourceManager.GetString("CategoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country is invalid.
        /// </summary>
        public static string CountryIsInvalid {
            get {
                return ResourceManager.GetString("CountryIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date\Time of Activity cannot be in the future.
        /// </summary>
        public static string DateTimeOfActivityCannotBeInTheFuture {
            get {
                return ResourceManager.GetString("DateTimeOfActivityCannotBeInTheFuture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incident date cannot be later than today&apos;s date.
        /// </summary>
        public static string IncidentDateCannotBeLaterThanTodaysDate {
            get {
                return ResourceManager.GetString("IncidentDateCannotBeLaterThanTodaysDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incident does not exist.
        /// </summary>
        public static string IncidentDoesNotExist {
            get {
                return ResourceManager.GetString("IncidentDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Of Candidates Affected should be no less than one.
        /// </summary>
        public static string NoOfCandidateLessThanOne {
            get {
                return ResourceManager.GetString("NoOfCandidateLessThanOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recognising Organisation does not exist.
        /// </summary>
        public static string ReferringOrgDoesNotExist {
            get {
                return ResourceManager.GetString("ReferringOrgDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recognising Organisation Email format is invalid.
        /// </summary>
        public static string ReferringOrgEmailMustBeAValidEmailAddress {
            get {
                return ResourceManager.GetString("ReferringOrgEmailMustBeAValidEmailAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recognising Organisation Exists should not be empty.
        /// </summary>
        public static string ReferringOrgExistsIsEmpty {
            get {
                return ResourceManager.GetString("ReferringOrgExistsIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recognising Organisation Type does not exist.
        /// </summary>
        public static string ReferringOrgTypeDoesNotExist {
            get {
                return ResourceManager.GetString("ReferringOrgTypeDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Residual Risk Rating is invalid.
        /// </summary>
        public static string ResidualRiskRatingIsInvalid {
            get {
                return ResourceManager.GetString("ResidualRiskRatingIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Risk Rating is invalid.
        /// </summary>
        public static string RiskRatingIsInvalid {
            get {
                return ResourceManager.GetString("RiskRatingIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sub Category does not belong to Category.
        /// </summary>
        public static string SubCategoryDoesNotBelongToCategory {
            get {
                return ResourceManager.GetString("SubCategoryDoesNotBelongToCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SubCategory does not exist.
        /// </summary>
        public static string SubCategoryDoesNotExist {
            get {
                return ResourceManager.GetString("SubCategoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Centre does not exist.
        /// </summary>
        public static string TestCentreDoesNotExist {
            get {
                return ResourceManager.GetString("TestCentreDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Location does not belong to Test Centre.
        /// </summary>
        public static string TestLocationDoesNotBelongToTestCentre {
            get {
                return ResourceManager.GetString("TestLocationDoesNotBelongToTestCentre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Location does not exist.
        /// </summary>
        public static string TestLocationDoesNotExist {
            get {
                return ResourceManager.GetString("TestLocationDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UKVI Immediate Report Type does not exist.
        /// </summary>
        public static string UkviImmediateReportTypeDoesNotExist {
            get {
                return ResourceManager.GetString("UkviImmediateReportTypeDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UKVI Immediate Report Type should be null.
        /// </summary>
        public static string UkviImmediateReportTypeShouldBeNull {
            get {
                return ResourceManager.GetString("UkviImmediateReportTypeShouldBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UKVI Immediate Report Type should not be empty.
        /// </summary>
        public static string UkviImmediateReportTypeShouldNotBeEmpty {
            get {
                return ResourceManager.GetString("UkviImmediateReportTypeShouldNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User does not exist.
        /// </summary>
        public static string UserDoesNotExist {
            get {
                return ResourceManager.GetString("UserDoesNotExist", resourceCulture);
            }
        }
    }
}
